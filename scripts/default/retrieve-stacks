#!/usr/bin/env ruby

require 'json'
require 'aws-sdk'

def get_proxy
  e = ENV['https_proxy']
  e = "https://#{e}" if e && !e.empty? && !e.start_with?('http')
  return e
end

spec = JSON.parse($stdin.read)
puts "default retrieve-stacks run with argv = #{spec["argv"].inspect}"

config = {}
config[:http_proxy] = get_proxy
cfn_client = Aws::CloudFormation::Client.new(config)

# FIXME could use concurrency - both to do each stack type, and to do
# description + template
spec["stacks"].entries.sort_by(&:first).each do |type, details|
  stack_name = details["name"]
  puts "Retrieving stack #{stack_name.inspect}"

  description_content = template_content = nil

  begin
    d_resp = cfn_client.describe_stacks(stack_name: stack_name)
    t_resp = cfn_client.get_template(stack_name: stack_name)
    description_content = JSON.generate(d_resp.to_h)
    template_content = t_resp.template_body
  rescue Aws::CloudFormation::Errors::ValidationError => e
    # Eww!
    if e.to_s.match /Stack with id \S+ does not exist/
      description_content = template_content = '{}'
    else
      raise
    end
  end

  IO.write(details["description"], description_content)
  IO.write(details["template"], template_content)
end
